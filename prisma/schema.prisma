// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model USERS {
  id              Int               @id @default(sequence())
  email           String            @unique
  full_name       String?
  password        String
  points          Int               @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
  user_to_tasks   user_to_tasks[]
  user_to_rewards user_to_rewards[]
}

model Tasks {
  id            Int             @id @default(sequence())
  name          String          @unique
  description   String?
  points        Int
  user_to_tasks user_to_tasks[]
  status        Task_Status? @relation(fields: [status_id], references: [id], onDelete: Cascade)
  status_id     Int
}

model Rewards {
  id              Int               @id @default(sequence())
  name            String            @unique
  description     String?
  cost            Int
  user_to_rewards user_to_rewards[]
}

model Achievements {
  id          Int     @id @default(sequence())
  name        String  @unique
  description String?
}

model Task_Status {
  id          Int           @id @default(sequence())
  status      String
  tasks       Tasks[]
}

model user_to_tasks {
  user    USERS? @relation(fields: [user_id], references: [id])
  user_id Int
  task    Tasks? @relation(fields: [task_id], references: [id])
  task_id Int

  @@id([user_id, task_id])
}

model user_to_rewards {
  user      USERS?   @relation(fields: [user_id], references: [id])
  user_id   Int
  reward    Rewards? @relation(fields: [reward_id], references: [id])
  reward_id Int

  @@id([user_id, reward_id])
}
